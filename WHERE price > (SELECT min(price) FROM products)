SELECT product_id, name, price
FROM products
WHERE price > (SELECT min(price) FROM products) 
order by product_id desc



Ещё одно важное направление применения подзапросов — создание более продвинутых условных выражений в операторах WHERE и HAVING. Но поскольку и в том, и в другом случае синтаксис и назначение подзапросов примерно одинаковые, в этом уроке мы будем рассматривать всё на примере подзапросов в WHERE.

В первую очередь важно понять, что подзапрос, возвращающий одно значение, может использоваться как обычное значение совместно с операторами сравнения.

Представьте, что нам нужно сравнить значения в каком-то столбце с максимальным, минимальным или средним значением в этом же столбце. Сделать это в рамках одного запроса не получится, так как агрегирующие функции нельзя использовать в блоке WHERE.

Например, следующий запрос работать не будет (база данных сообщит об ошибке):

SELECT column
FROM table
WHERE column = MAX(column) 


В то же время такой запрос сработает, так как подзапрос выполнится первым и вернёт одно значение:

SELECT column
FROM table
WHERE column = (SELECT MAX(column) FROM table) 


В результате выполнения такого запроса мы получим все значения в колонке column, равные максимальному значению в этой колонке.

Задание:

Выведите из таблицы products информацию о всех товарах кроме самого дешёвого. Результат отсортируйте по убыванию id товара.

Поля в результирующей таблице: product_id, name, price
